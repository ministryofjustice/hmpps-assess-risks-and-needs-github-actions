name: Get Cypress test timings from cache

inputs:
  spec-file-patterns:
    description: 'List of glob patterns, separated by a single space. For example: e2e/**/*.cy.ts e2e/**/*.cy.js'
    required: true
  timings-cache-key:
    description: 'Cache key to retrieve timings from'
    required: false
    default: 'cypress-timings'
  create:
    description: 'Whether to create the timings.json file'
    required: false
    default: 'true'

outputs:
  timings:
    description: 'Contents of timings.json'
    value: ${{ steps.get-timings.outputs.timings }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - name: Restore timing cache
      uses: actions/cache/restore@v4
      with:
        path: timings-cache.json
        key: ${{ inputs.timings-cache-key }}
    - name: Get cached timings
      id: get-cached-timings
      shell: bash
      run: |
        if ls timings-cache.json; \
        then cat timings-cache.json && echo "timings=$(jq -c . < timings-cache.json)" >> $GITHUB_OUTPUT; \
        else echo "timings=" >> $GITHUB_OUTPUT; \
        fi
    - name: Find spec files
      if: ${{ steps.get-cached-timings.outputs.timings != '' }}
      shell: bash
      run: |
        find ${{ inputs.spec-file-patterns }} -type f \
          | while read -r spec; do \
            hash=$(md5sum "$spec" | cut -d " " -f1); \
            echo "{\"spec\": \"$spec\", \"hash\": \"$hash\"}"; \
          done \
          | jq -s '.' > spec-hashes.json
        cat spec-hashes.json
    - name: Create timings.json
      if: ${{ steps.get-cached-timings.outputs.timings != '' }}
      shell: bash
      run: |
        cat timings-cache.json \
        | jq --argjson specs "$(jq '[.[] | {spec, hash}]' spec-hashes.json)" \
          '.durations | map(select([.spec, .hash] as $entry | $specs | any(.spec == $entry[0] and .hash == $entry[1])) | {spec, duration})' \
        | jq '{durations: .}' > timings.json
    - name: Get timings.json
      id: get-timings
      shell: bash
      run: |
        if ls timings.json; \
        then cat timings.json && echo "timings=$(jq -c . < timings.json)" >> $GITHUB_OUTPUT; \
        else echo "timings=" >> $GITHUB_OUTPUT; \
        fi
    - uses: ministryofjustice/hmpps-assess-risks-and-needs-github-actions/.github/actions/cypress/create_timings_file@arn-2494-shared-workflows-actions
      if: ${{ inputs.create == 'true' }}
      with:
        timings: ${{ steps.get-timings.outputs.timings }}
